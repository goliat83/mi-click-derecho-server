version: '3.8'
services:
  fastapi:
    build: ./fastapi
    container_name: fastapi
    env_file: .env
    expose:
      - "8000"
  node:
    image: node:20
    container_name: node
    working_dir: /app
    volumes:
      - ./node:/app
    command: "node app.js"
    expose:
      - "3000"
  php:
    image: php:8.2-apache
    container_name: php-apache
    volumes:
      - ./php-apache:/var/www/html
    expose:
      - "80"
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    env_file: .env
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    env_file: .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: always
    expose:
      - "5678"
    env_file: .env
    volumes:
      - n8n_data:/home/node/.n8n
  evolution:
    image: atendai/evolution-api:latest
    container_name: evolution-api
    restart: always
    expose:
      - "8080"
    environment:
      - AUTHENTICATION_API_KEY=${EVOLUTION_API_KEY}
    volumes:
      - evolution_store:/evolution/store
      - evolution_instances:/evolution/instances
  openwebui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: openwebui
    restart: always
    expose:
      - "8080"
    volumes:
      - openwebui_data:/app/backend/data
  nginx:
    image: nginx:latest
    container_name: nginx
    depends_on:
      - fastapi
      - node
      - php
      - mysql
      - postgres
      - n8n
      - evolution
      - openwebui
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certbot/www:/var/www/certbot:ro
      - ./letsencrypt:/etc/letsencrypt:ro
volumes:
  mysql_data:
  pg_data:
  n8n_data:
  openwebui_data:
  evolution_store:
  evolution_instances:
